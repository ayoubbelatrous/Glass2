msvcrt :: #library "msvcrt";
ucrt  :: #library "ucrtbase";

#add_library "legacy_stdio_definitions";
#add_library "legacy_stdio_wide_specifiers";

fn printf		(*u8 fmt) #c_varargs 							-> int		#foreign msvcrt;
fn sprintf		(*u8 str, *u8 fmt) #c_varargs 					-> int		#foreign msvcrt;

fn fopen		(*u8 path, *u8 mode) 							-> *u64 	#foreign msvcrt;
fn fclose		(*u64 file) 									-> void 	#foreign msvcrt;
fn malloc		(u64 size) 										-> *void 	#foreign ucrt;
fn free			(*void ptr) 									-> void 	#foreign msvcrt;
fn strlen		(*u8 ptr) 										-> i32 		#foreign msvcrt;
fn memcpy		(*void dst, *void src, u64 count) 				-> u64 		#foreign msvcrt;
fn memset		(*void buf, i32 c, int n) 						-> u64 		#foreign msvcrt;
fn memmove		(*void str1, *void str2, u64 n)					-> *void 	#foreign msvcrt;
fn putchar		(u8 c) 											-> void 	#foreign msvcrt;
fn abort		() 												-> void  	#foreign msvcrt;
fn strcmp		(*u8 str1, *u8 str2) 							-> i32 		#foreign msvcrt;
fn strncmp		(*u8 str1, *u8 str2, u64 count) 				-> i32 		#foreign msvcrt;
fn strcat		(*u8 str1, *u8 str2) 							-> *u8 		#foreign msvcrt;
fn isalpha	    (i32 c) 										-> i32 		#foreign msvcrt;
fn isdigit		(i32 c) 										-> i32 		#foreign msvcrt;
fn isspace		(u8 c) 											-> bool 	#foreign msvcrt;
fn fseek		(*u64 stream, i64 offset, i32 whence) 			-> i32 		#foreign msvcrt;
fn ftell		(*u64 stream) 									-> u64 		#foreign msvcrt;
fn fread		(*u8 ptr, u64 size, u64 nmemb, *u64 stream) 	-> u64 		#foreign msvcrt;
fn fwrite		(*void ptr, u64 size, u64 nmemb, *u64 stream) 	-> u64 		#foreign msvcrt;
fn fflush		(*u64 stream) 									-> i32 		#foreign msvcrt;
fn exit(i32 status) 											-> void 	#foreign msvcrt;
fn rand() 														-> i32 		#foreign msvcrt;
fn srand(int seed) 												-> int 		#foreign msvcrt;
fn time(*int t) 												-> int 		#foreign msvcrt;
fn abs(int x) 													-> int 		#foreign ucrt;
fn cosf(f32 x) 													-> f32 		#foreign ucrt;
fn sinf(float x) 												-> float 	#foreign ucrt;
fn sqrtf(f32 x) 												-> f32 		#foreign ucrt;
fn roundf(f32 x) 												-> f32 		#foreign ucrt;
fn floorf(f32 x) 												-> f32 		#foreign ucrt;
fn system(*u8 path) 											-> int 		#foreign ucrt;
