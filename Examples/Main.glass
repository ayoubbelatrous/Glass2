fn print_integer(i32 any) {
	print("%",any);
}

fn print_float(f32 any) {
	print("%",any);
}

fn ansi_green() {
	printf("\e[1;32m");
}

fn ansi_green_u() {
	printf("\e[4;32m");
}

fn ansi_c_u() {
	printf("\e[4;36m");
}

fn ansi_clear() {
	printf("\e[0m");
}

fn print_type_info(TypeInfo* ti) {

	ansi_clear();

	TypeInfo_Struct* tis = ti;

	i32 count = tis.members.count;

	ansi_green_u();

	print("Struct : %\n", tis.name);

	ansi_clear();

	print("Has : % members\n", count);
	print("% bytes in Size\n", tis.size);

	TypeInfo_Member** members = tis.members.data;

	i32 i = 0;
	i32 offset = 0;

	ansi_c_u();

	while i != count {
		TypeInfo_Member* member = members[i];

		print("% : % :: Size: %\n",
			member.member_name,
			member.name,
			member.size
		);

		i = i + 1;
	}

	ansi_clear();
}

fn print_type($T any) {
	TypeInfo* ti = typeof(T);
	print_type_info(ti);
}

enum #flags Entity_Flags {
	Flag00;
};

fn main() {
	{
		i32 i = 0;
	}

	i32 i = 0;
}