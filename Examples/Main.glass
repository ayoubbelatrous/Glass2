#foreign fn printf!(u8* format) : i32 {}

#foreign fn fopen(u8* path,u8* mode) : u64* {}
#foreign fn fclose(u64* file) : void {}

#foreign fn malloc(i32 size) : void* {}
#foreign fn free(void* ptr) : void {}

struct GLFWwindow{};

#foreign fn glfwCreateWindow() : GLFWwindow* {};

struct Renderer
{
   i32 ID;
};

fn Renderer_Allocate() : Renderer* {
   Renderer* r = malloc(4);
   r.ID = 30;
   return r;
}

fn Renderer_Init(Renderer* r) : void {
   printf("Renderer.ID: %i",r.ID);
}

fn main() : i32 {
   f32 i = 1.5;
   Renderer* r = Renderer_Allocate();
   Renderer_Init(r);
}