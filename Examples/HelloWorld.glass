#foreign fn printf!(u8* fmt) : i32 {};
#foreign fn malloc(u64 size) : void* {};

//fn print_n(u8* string) : i32 {
//
//	u32 count = 10;
//	u32 i = 0;
//
//	while i < count {
//		printf("Hi: %s\n", string);
//		i = i + 1;
//	}
//
//	return 0;
//}
//
//fn print_vars(Any ...args) : i32 {
//
//	Any* anies = cast(Any*) args.data;
//	u64 count = args.count;
//
//	u64 i = 0;
//	u64 one = 1;
//
//	while i < count {
//
//		Any any = anies[i];
//
//		TypeInfo ti = *cast(TypeInfo*) any.data
//
//		printf("Arg: %p,%p!\n", ti);
//
//		i = i + one;
//	}
//
//	return 0;
//}



fn main() : i32 {

	TypeInfo* ti_ptr 	= typeof(i32);
	TypeInfo* fti_ptr    = typeof(f32);

	TypeInfo ti 	= *typeof(i32);
	TypeInfo fti 	= *typeof(f32);

	TypeInfo any_ti = *typeof(Any);

	printf("Got i32 flags: %i\n", ti.flags);
	printf("Got f32 flags: %i\n", fti.flags);
	printf("Got Any flags: %i\n", any_ti.flags);

	printf("Got i32 name: %s\n", ti.name);
	printf("Got f32 name: %s\n", fti.name);
	printf("Got Any name: %s\n", any_ti.name);

	return 0;
}