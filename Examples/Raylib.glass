#foreign fn SetConfigFlags(i32 flags) : void {}
#foreign fn InitWindow(i32 w, i32 h, u8* title) : void {}
#foreign fn WindowShouldClose() : i32 {}

#foreign fn BeginDrawing() : void {}
#foreign fn EndDrawing() : void {}

struct Color {
	u8 r;
	u8 g;
	u8 b;
	u8 a;
};

fn _Color(f32 r, f32 g, f32 b, f32 a) : Color {
	Color color;

	color.r = r * 255;
	color.g = g * 255;
	color.b = b * 255;
	color.a = a * 255;

	return color;
}

struct Rectangle {
	float x;
	float y;
	float width;
	float height;
};

struct Texture {
	int id;
	int width;
	int height;
	int mipmaps;
	int format;
};

struct Font {
	int baseSize;
	int glyphCount;
	int glyphPadding;
	Texture texture;
	void *recs;
	void *glyphs;
};

struct Image {
    void *data;             // Image raw data
    i32 width;              // Image base width
    i32 height;             // Image base height
    i32 mipmaps;            // Mipmap levels, 1 by default
    i32 format;             // Data format (PixelFormat type)
};

struct GlyphInfo {
    i32 value;              // Character value (Unicode)
    i32 offsetX;            // Character offset X when drawing
    i32 offsetY;            // Character offset Y when drawing
    i32 advanceX;           // Character advance position X
    Image image;            // Character image data
};

enum #flags Window_Flags {
	FLAG_FULLSCREEN_NONE;
	FLAG_FULLSCREEN_MODE;
	FLAG_WINDOW_RESIZABLE;
};

#foreign fn ClearBackground(Color color) : void {}
#foreign fn DrawRectangle(int posX, int posY, int width, int height, Color color) : void {}

#foreign fn DrawText			(u8* text, int posX, int posY, int fontSize, Color color) : void {}
#foreign fn DrawTextEx			(Font font, u8* text, vec2 position, f32 fontSize, f32 spacing, Color tint) : void {}
#foreign fn DrawTextCodepoints	(Font font, i32* codepoints, i32 count, vec2 position, f32 fontSize, f32 spacing, Color color) : void {}
#foreign fn DrawTextCodepoint	(Font font, i32 codepoint, vec2 position, f32 fontSize, Color color) : void {}

#foreign fn GetGlyphIndex(Font font, i32 codepoint) : i32 {}	// Get glyph index position in font for a codepoint (unicode character), fallback to '?' if not found
#foreign fn GetGlyphInfo(Font font, i32 codepoint) : GlyphInfo  {}

#foreign fn SetTargetFPS(i32 target) : void {}
#foreign fn DrawFPS(int posX, int posY) : void {}

#foreign fn LoadFont(u8* path) : Font {}
#foreign fn LoadFontEx(u8* path, i32 font_size, i32* font_chars, int glyph_count) : Font {}

#foreign fn GetMouseWheelMove() : f32 {}
