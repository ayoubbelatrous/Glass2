
enum TextureFormat
{
	RGB8;
	RGBA8;
};

struct Texture {
	u32 renderer_id;

	u32 width;
	u32 height;

	TextureFormat format;
};

fn Texture_Create(u32 width, u32 height, u8[..] data, TextureFormat format) : Texture {
	Texture t;

	t.width 	= width;
	t.height 	= height;
	t.format 	= format;

	glGenTextures(1, &t.renderer_id);
	glBindTexture(GL_TEXTURE_2D, t.renderer_id);

	glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data.data);

	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);
	glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);

	return t;
}

fn Texture_Bind(Texture* t) {
	glBindTexture(GL_TEXTURE_2D, t.renderer_id);
}
